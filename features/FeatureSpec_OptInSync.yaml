# ==================================================
# FEATURE SPEC — OPT-IN ENCRYPTED SYNC (SETTINGS ONLY)
# ==================================================
feature_id: "F009"
name: "Opt-In Encrypted Sync"
category: "Reliability / Convenience"
version: "1.0"
author: "Jesse J. Lamont"
created: "2025-10-24"

objective: >
  Provide optional end-to-end encrypted synchronization of user preferences,
  watchlists, and license state across devices. No chart images or detections
  are ever synced.

scope:
  - Syncable datasets: preferences.json, watchlist.db (symbols only), license_pro.json (token binding).
  - Transport: user-selected provider (Drive/Dropbox/WebDAV) via Android Sharesheet or
    local “Sync File” carry method. Default = OFF.
  - Keys: locally generated Curve25519 keypair; remote blobs encrypted with XChaCha20-Poly1305.
  - Manual and scheduled sync options; conflict = last-writer-wins with timestamp.

architecture:
  components:
    - SyncManager.kt (encrypt/decrypt, schedule)
    - KeyVault.kt (OS keystore backed)
    - ProviderAdapter.kt (Drive/Dropbox/WebDAV via user intents; or file import/export)
  data_flow: "UserPrefs/DB → SyncManager.encrypt → ProviderAdapter.upload" and reverse on restore

privacy_security:
  network_access: optional (only if user enables provider)
  data_included: "prefs + watchlist + license token; never images or detections"
  encryption: "XChaCha20-Poly1305 (libsodium/NaCl), keys in Android Keystore"
  compliance: "GDPR/CCPA; explicit consent; clear disable & delete actions"

ui_requirements:
  - Settings > Sync: Enable toggle, key status, manual Sync Now, Choose Provider.
  - “Export Sync Blob” and “Import Sync Blob” buttons for fully offline carry.

testing:
  - Crypto unit tests: encrypt/decrypt round-trip, nonce uniqueness.
  - Provider mock tests: upload/download stubs.
  - Recovery: lost device flow using exported sync blob.

pro_tier: true
status: "Planned / Approved"
````0
